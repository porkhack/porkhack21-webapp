{"version":3,"sources":["overmind/pork/tree.js","config/index.js","overmind/view/Login/index.js","overmind/view/Login/state.js","overmind/view/Login/actions.js","overmind/view/index.js","overmind/view/state.js","overmind/view/actions.js","overmind/pork/actions.js","overmind/pork/index.js","overmind/pork/state.js","overmind/app/index.js","overmind/app/state.js","overmind/app/actions.js","overmind/OADAManager/tree.js","overmind/OADAManager/index.js","overmind/OADAManager/state.js","overmind/OADAManager/actions.js","overmind/index.ts","view/Login/index.js","view/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SCOPE","METADATA","REDIRECT","OPTIONS","redirect","metadata","scope","oadaDomain","state","domain","config","actions","onInitialize","window","localStorage","token","view","Login","login","myState","loading","match","OADAManager","connected","loggedIn","logout","domainChange","data","value","viewDemo","a","app","initialize","props","oada","get","path","tree","pork","sortTradingPartners","conn","defaultConnection","tps","bookmarks","trellisfw","haulers","_","filter","type","processors","farmers","_actions","effects","_type","_rev","fields","farm","farms","seasons","operations","currentConnection","user","connect","options","cache","concurrency","then","response","error","connectionId","connection_id","disconnect","getUserInfo","requests","fetchAndWatch","watchRequests","watch","onFieldChanged","ret","rewatchRequests","responses","status","put","push","length","myActions","soils","Map","zoomBounds","oadaCacheOvermind","namespaced","useOvermind","createHook","css","height","src","alt","Form","onSubmit","Input","placeholder","onChange","evt","Button","style","marginTop","primary","disabled","onClick","useStyles","makeStyles","theme","createStyles","root","display","App","classes","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","overmind","createOvermind","devtools","process","ReactDOM","render","document","getElementById"],"mappings":"mIAAAA,EAAOC,QAAU,CACf,UAAa,CACX,MAAS,wCACT,KAAQ,EACR,MAAS,CACP,MAAS,mBACT,KAAQ,EACR,QAAW,CACT,MAAS,mBACT,KAAQ,EACR,QAAW,CACT,IAAK,CACH,MAAS,mBACT,KAAQ,IAGZ,UAAa,CACX,IAAK,CACH,MAAS,mBACT,KAAQ,IAGZ,QAAW,CACT,IAAK,CACH,MAAS,mBACT,KAAQ,IAGZ,+BAAgC,CAC9B,IAAK,CACH,MAAS,mBACT,KAAQ,S,26BC/BdC,EAAQ,UACRC,EAAW,y/BACXC,EAAW,oEAUF,GACbC,QAPY,CACVC,SAAUF,EACVG,SAAUJ,EACVK,MAAON,GAKTE,WACAD,WACAD,QACAO,WAbe,ICDJC,ECFE,CACbC,OAAQC,EAAOH,YDEJI,EEJE,CACbC,aADa,YACqB,IAAnBJ,EAAkB,EAAlBA,MAAOG,EAAW,EAAXA,QACdF,EAASI,OAAOC,aAAa,eAC7BC,EAAQF,OAAOC,aAAa,cAC9BL,IACFD,EAAMQ,KAAKC,MAAMR,OAASA,GAExBA,GAAUM,GAEZJ,EAAQK,KAAKC,MAAMC,MAAM,CAACH,WAGxBG,MAZO,cAY6B,OAAD,yHAA3BV,EAA2B,EAA3BA,MAAOG,EAAoB,EAApBA,QAAYI,EAAQ,EAARA,MACzBI,EAAUX,EAAMQ,KAAKC,MACvBR,EAASU,EAAQV,OACrBU,EAAQC,SAAU,EAClBX,EAASA,EAAOY,MAAM,SAAWZ,EAAS,WAAWU,EAAQV,OAJtB,SAKjCE,EAAQW,YAAYJ,MAAM,CAACT,SAAQM,UALF,OAMvCI,EAAQC,SAAU,EACdZ,EAAMc,YAAYC,YACpBJ,EAAQK,UAAW,EAEnBX,OAAOC,aAAa,eAAiBK,EAAQV,OAC7CI,OAAOC,aAAa,cAAgBN,EAAMc,YAAYP,OAXjB,+CAcnCU,OA1BO,YA0BqB,OAAD,iHAAlBjB,EAAkB,EAAlBA,MAAOG,EAAW,EAAXA,QACdQ,EAAUX,EAAMQ,KAAKC,OACvBT,EAAMc,YAAYC,UAFS,gCAGvBZ,EAAQW,YAAYG,SAHG,cAItBZ,OAAOC,aAAa,sBACpBD,OAAOC,aAAa,cALE,OAO/BK,EAAQK,UAAW,EAPY,8CASjCE,aAnCa,WAmCWC,GAAM,EAAfnB,MACSQ,KAAKC,MACnBR,OAASkB,EAAKC,OAExBC,SAvCa,WAuCOF,GAAM,EAAfnB,MACaQ,KAAKC,MACnBO,UAAW,ICpCVhB,EAAK,aAChBS,MAAOA,GCNM,IDSFN,EAAO,aAClBM,MAAOA,GEVM,IFaFL,EAAY,uCAAG,6BAAAkB,EAAA,6DAAQnB,EAAR,EAAQA,QAAR,SACpBA,EAAQoB,IAAInB,eADQ,uBAEpBD,EAAQK,KAAKC,MAAML,eAFC,2CAAH,sD,oDGRV,GACPoB,WADO,WACsBC,GAAQ,OAAD,mHAAxBzB,MAAOG,EAAiB,EAAjBA,QAAiB,SAClCA,EAAQuB,KAAKC,IAAI,CACrBC,KAAM,4BACNC,WAHsC,uBAKlC1B,EAAQuB,KAAKC,IAAI,CACrBC,KAAM,wCACNC,WAPsC,OASxC1B,EAAQ2B,KAAKC,sBAT2B,8CAY1CA,oBAba,YAa0B,IAAlB/B,EAAiB,EAAjBA,MACfgC,GADgC,EAAV7B,QACfH,EAAM0B,KAAKO,mBAClBC,EAAMlC,EAAM0B,KAAKM,GAAMG,UAAUC,UAAU,oBAE/CpC,EAAMqC,QAAUC,IAAEC,OAAOL,EAAK,CAACM,KAAM,WACrCxC,EAAMyC,WAAaH,IAAEC,OAAOL,EAAK,CAACM,KAAM,eACxCxC,EAAM0C,QAAUJ,IAAEC,OAAOL,EAAK,CAACM,KAAM,cCrB5BxC,EAAK,eCHH,IDOFG,EAAO,eACfwC,GECQ3C,EAAK,eCPH,IDYFG,EAAO,eEbL,CACbC,aADa,YACkB,EAAjBJ,MAAiB,EAAVG,WFiBVyC,EAAU,GGnBR,GACbT,UAAW,CACTU,MAAO,wCACPC,KAAM,EACNC,OAAQ,CACNF,MAAO,qCACPC,KAAM,EACNC,OAAQ,CACN,IAAK,CACHF,MAAO,oCACPC,KAAM,EACNE,KAAM,CACJH,MAAO,sCAIbI,MAAO,CACL,IAAK,CACHJ,MAAO,mCACPC,KAAM,KAIZI,QAAS,CACPL,MAAO,sCACPC,KAAM,EACN,IAAK,CACHD,MAAO,qCACPC,KAAM,EACNC,OAAQ,CACN,IAAK,CACHF,MAAO,oCACPC,KAAM,EACNK,WAAY,CACV,IAAK,CACHN,MAAO,4CAKfI,MAAO,CACL,IAAK,CACHJ,MAAO,mCACPC,KAAM,IAGVK,WAAY,CACV,IAAK,CACHN,MAAO,wCACPC,KAAM,QC9CL9C,ECFE,CACbe,WAAW,EAEXqC,kBAAmB,KACnBnD,OAAQ,KACRoD,KAAM,WAAsBrD,GAC1B,OADoC,EAA9BoD,kBAECd,IAAEX,IAAI3B,EAAO,2BADW,ODHtBG,EECE,CACPmD,QADO,cAC8C,OAAD,uHAA3CnD,EAA2C,EAA3CA,QAASH,EAAkC,EAAlCA,MAAkC,EAA3B4C,QAAW3C,EAAgB,EAAhBA,OAAgB,EAARM,MAC1CI,EAAUX,EAAMc,YACJX,EAAQW,YAF8B,kBAKjDX,EAAQuB,KAAK4B,QAAQ,CAE1BrD,OAAQA,EACRsD,QAASrD,EAAOP,QAChB6D,OAAO,EACPC,YAAa,IACZC,MAAK,SAACC,GAOP,OANKA,EAASC,QACZjD,EAAQyC,kBAAoBO,EAASE,aACrClD,EAAQJ,MAAQoD,EAASpD,MACzBI,EAAQI,WAAY,GAGf4C,MAlB+C,8CAqBpD1C,OAtBO,YAsBmB,OAAD,uHAAjBd,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACfW,EAAUX,EAAMc,YACIgD,EAAiBnD,EAApCyC,yBACAzC,EAAQJ,MAHc,SAIvBJ,EAAQuB,KAAKqC,WAAW,CAACD,kBAJF,8CAMzBE,YA5BO,YA4BwB,OAAD,yHAAjB7D,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACpBW,EAAUX,EAAMc,YACIgD,EAAiBnD,EAApCyC,kBACHa,EAAW,CAAC,CACdrC,KAAM,cAJ0B,SAM5BzB,EAAQuB,KAAKC,IAAI,CAACsC,WAAUH,kBANA,8CAQ9BI,cApCO,YAoC0B,OAAD,iIAAjB/D,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACtBW,EAAUX,EAAMc,YACIgD,EAAiBnD,EAApCyC,kBAEHe,EAAgB,CAClB,CACEvC,KAAM,oBACNC,OACAuC,MAAO,CACLjE,QAAS,CAACA,EAAQW,YAAYuD,kBAGlC,CACEzC,KAAM,qBACNC,OACAuC,MAAO,CACLjE,QAAS,MAhBqB,SAoBlBA,EAAQuB,KAAKC,IAAI,CAACsC,SAAUE,EAAeL,kBApBzB,UAoB9BQ,EApB8B,OAqBhCC,EAAkB,IAClBD,EAAIE,UAAU,GAAGZ,MAtBe,oBAwBF,MAA5BU,EAAIE,UAAU,GAAGC,OAxBa,uBAwBSH,EAAIE,UAAU,GAAGZ,MAxB1B,eA0B9BK,EAAW,CAAC,CACdpC,OACAV,KAAM,CACJ4B,OAAQ,GACRE,MAAO,IAETrB,KAAM,sBAhC0B,UAmC5BzB,EAAQuB,KAAKgD,IAAI,CAACT,WAAUH,kBAnCA,QAqClCS,EAAgBI,KAAKR,EAAc,IArCD,YAuChCG,EAAIE,UAAU,GAAGZ,MAvCe,oBAyCF,MAA5BU,EAAIE,UAAU,GAAGC,OAzCa,uBAyCSH,EAAIE,UAAU,GAAGZ,MAzC1B,eA2C9BK,EAAW,CAAC,CACdpC,OACAV,KAAM,GACNS,KAAM,uBA9C0B,UAiD5BzB,EAAQuB,KAAKgD,IAAI,CAACT,WAAUH,kBAjDA,QAmDlCS,EAAgBI,KAAKR,EAAc,IAnDD,aAqDhCI,EAAgBK,OAAS,GArDO,kCAqDEzE,EAAQuB,KAAKC,IAAI,CAACsC,SAAUM,EAAiBT,kBArD/C,+CAuDhCpD,MA3FO,cA2FmC,OAAD,6HAAlCP,EAAkC,EAAlCA,QAASH,EAAyB,EAAzBA,MAASC,EAAgB,EAAhBA,OAAQM,EAAQ,EAARA,MAC/BI,EAAUX,EAAMc,YAChB+D,EAAY1E,EAAQW,YAC1BH,EAAQV,OAASA,EAH4B,SAIvB4E,EAAUvB,QAAQ,CAACrD,SAAQM,UAJJ,qBAItCqD,MAJsC,kCAMrCiB,EAAUb,cAN2B,yBAOrC7D,EAAQ2E,MAAMtD,aAPuB,yBAQrCrB,EAAQK,KAAKuE,IAAIC,aARoB,gDCpF3CtD,EAAOuD,IAAkB,QAUlB/E,EAASgF,YAAW,CAC/B3D,MACAG,OACAlB,OACAsB,OACAhB,gBAOWqE,EAAcC,c,iFC8BZ3E,OA5Df,WAAkB,IAAD,EACY0E,IAAnBnF,EADO,EACPA,MAAOG,EADA,EACAA,QACTQ,EAAUX,EAAMQ,KAAKC,MACrBoE,EAAY1E,EAAQK,KAAKC,MAE/B,OACE,uBAAK4E,IAAKA,YAAF,4SAAR,UAUE,uBAAKA,IAAKA,YAAF,6NAAR,UASE,sBAAKA,IAAK,CACRC,OAAQ,KACPC,IAAG,iBAAoBC,IAAK,SAC/B,gBAACC,EAAA,EAAD,CAAMJ,IAAKA,YAAF,iGAGNK,SAAUb,EAAUnE,MAHvB,UAIE,eAACiF,EAAA,EAAD,CAAOC,YAAY,iBAAiBxE,MAAOT,EAAQV,OAAQ4F,SAAU,SAACC,EAAK3E,GAAN,OAAe0D,EAAU3D,aAAaC,MAC3G,eAAC4E,EAAA,EAAD,CACEC,MAAO,CAACC,UAAW,GAAIC,SAAO,EAC9BtF,QAASD,EAAQC,QACjBuF,SAAUxF,EAAQC,QAHpB,wCAMA,eAACmF,EAAA,EAAD,CACEC,MAAO,CAACC,UAAW,GACnBG,QAASvB,EAAUxD,SACnB8E,SAAUxF,EAAQC,QAHpB,6BAQJ,oBAAGyE,IAAKA,YAAF,uLAOHe,QAASvB,EAAU5D,OAPtB,wBC7CAoF,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,aAoBAC,GAfH,WAAO,IAAD,EACWxB,IAAnBnF,EADQ,EACRA,MACF4G,GAFU,EACDzG,QACCkG,MAEhB,OAAKrG,EAAMQ,KAAKC,MAAMO,SAKpB,sBAAK6F,UAAWD,EAAQH,KAAxB,oBAJO,eAAC,GAAD,KCLIK,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBtD,MAAK,YAAkD,IAA/CuD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCADO,GAAWC,YAAerH,EAAQ,CAC7CsH,UAAUC,IAGZC,IAASC,OACP,eAAC,IAAD,CAAUvG,MAAOkG,GAAjB,SACE,eAAC,GAAD,MAEFM,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.fa571490.chunk.js","sourcesContent":["module.exports = {\n  'bookmarks': {\n    '_type': \"application/vnd.oada.bookmarks.1+json\",\n    '_rev': 0,\n    'soils': {\n      '_type': 'application/json',\n      '_rev': 0,\n      'tabular': {\n        '_type': 'application/json',\n        '_rev': 0,\n        'mapunit': {\n          '*': {\n            '_type': 'application/json',\n            '_rev': 0,\n          }\n        },\n        'component': {\n          '*': {\n            '_type': 'application/json',\n            '_rev': 0,\n          }\n        },\n        'horizon': {\n          '*': {\n            '_type': 'application/json',\n            '_rev': 0,\n          }\n        },\n        'official-series-descriptions': {\n          '*': {\n            '_type': 'application/json',\n            '_rev': 0,\n          }\n        }\n      }\n    }\n  },\n}\n","const SCOPE = 'all:all';\nconst METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\nconst REDIRECT = 'https://porkhack.github.io/porkhack21-webapp/oauth2/redirect.html';\n\nlet oadaDomain = '';\n\nlet OPTIONS = {\n    redirect: REDIRECT,\n    metadata: METADATA,\n    scope: SCOPE\n};\n\nexport default {\n  OPTIONS,\n  REDIRECT,\n  METADATA,\n  SCOPE,\n  oadaDomain\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import config from '../../../config'\nexport default {\n  domain: config.oadaDomain\n}\n","export default {\n  onInitialize({ state, actions }) {\n    const domain = window.localStorage['oada:domain'];\n    const token = window.localStorage['oada:token'];\n    if (domain) {\n      state.view.Login.domain = domain\n    }\n    if (domain && token) {\n      //Auto login\n      actions.view.Login.login({token});\n    }\n  },\n  async login({ state, actions }, {token}) {\n    const myState = state.view.Login;\n    let domain = myState.domain;\n    myState.loading = true;\n    domain = domain.match(/^http/) ? domain : 'https://'+myState.domain;\n    await actions.OADAManager.login({domain, token});\n    myState.loading = false;\n    if (state.OADAManager.connected) {\n      myState.loggedIn = true;\n      //Save domain and token\n      window.localStorage['oada:domain'] = myState.domain;\n      window.localStorage['oada:token'] = state.OADAManager.token;\n    }\n  },\n  async logout({ state, actions }) {\n    const myState = state.view.Login;\n    if (state.OADAManager.connected) {\n      await actions.OADAManager.logout();\n      delete window.localStorage['oada:domain']\n      delete window.localStorage['oada:token']\n    }\n    myState.loggedIn = false;\n  },\n  domainChange({ state }, data) {\n    const myState = state.view.Login;\n    myState.domain = data.value;\n  },\n  viewDemo({ state }, data) {\n    const myState = state.view.Login;\n    myState.loggedIn = true;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as Login from './Login'\n\nexport const state = {\n  Login: Login.state,\n  ..._state\n};\nexport const actions = {\n  Login: Login.actions,\n  ..._actions\n}\nexport const onInitialize = async ({actions}) => {\n  await actions.app.onInitialize();\n  await actions.view.Login.onInitialize();\n}\n","export default {\n  \n}\n","export default {\n\n}\n","import {v1 as uuid} from 'uuid'\nimport _ from 'lodash';\nimport Promise from 'bluebird'\nimport tree from './tree'\n\nexport default {\n  async initialize({state, actions}, props) {\n    await actions.oada.get({\n      path: '/bookmarks/trellisfw/asns',\n      tree,\n    })\n    await actions.oada.get({\n      path: '/bookmarks/trellisfw/trading-partners',\n      tree,\n    })\n    actions.pork.sortTradingPartners()\n  },\n\n  sortTradingPartners({state, actions}) {\n    let conn = state.oada.defaultConnection;\n    let tps = state.oada[conn].bookmarks.trellisfw['trading-partners'];\n\n    state.haulers = _.filter(tps, {type: 'hauler'})\n    state.processors = _.filter(tps, {type: 'processors'})\n    state.farmers = _.filter(tps, {type: 'farmers'})\n\n  }\n}\n","import _state from \"./state\";\nimport _actions from \"./actions\";\n\nexport const state = {\n  ..._state\n}\n\nexport const actions = {\n  ..._actions\n}\n","export default {\n  \n}\n","import _state from './state'\nimport _actions from './actions'\n\n//import * as OADAManager from '../OADAManager'\n//import oadaCacheOvermind from '@oada/oada-cache-overmind'\n\n//const oada =  oadaCacheOvermind('oada')\n//console.log('OADA', oada);\n\nexport const state = {\n  //oada: oada.state,\n  //OADAManager: OADAManager.state,\n  ..._state\n};\nexport const actions = {\n  //oada: oada.actions,\n  //OADAManager: OADAManager.actions,\n  ..._actions\n}\nexport const effects = {\n  //oada: oada.effects\n}\n","import _ from 'lodash';\n\nexport default {}\n","import _ from 'lodash'\nexport default {\n  onInitialize({state, actions}) {\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0\n        }\n      }\n    },\n    seasons: {\n      _type: \"application/vnd.oada.seasons.1+json\",\n      _rev: 0,\n      \"*\": {\n        _type: \"application/vnd.oada.season.1+json\",\n        _rev: 0,\n        fields: {\n          \"*\": {\n            _type: \"application/vnd.oada.field.1+json\",\n            _rev: 0,\n            operations: {\n              \"*\": {\n                _type: \"application/vnd.oada.operation.1+json\"\n              }\n            }\n          }\n        },\n        farms: {\n          \"*\": {\n            _type: \"application/vnd.oada.farm.1+json\",\n            _rev: 0\n          }\n        },\n        operations: {\n          \"*\": {\n            _type: \"application/vnd.oada.operation.1+json\",\n            _rev: 0\n          }\n        }\n      }\n    }\n  }\n};\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nexport default {\n  connected: false,\n  //token: 'def',\n  currentConnection: null,\n  domain: null,\n  user: ({currentConnection}, state) => {\n    if (!currentConnection) return null;\n    return _.get(state, 'oada.localhost.users.me');\n  }\n}\n","import tree from './tree';\nimport config from '../../config'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\n\nexport default {\n  async connect({actions, state, effects}, {domain, token}) {\n    const myState = state.OADAManager;\n    const myActions = actions.OADAManager;\n//    if (token) myState.token = token;\n//    token = await myActions.getToken(domain);\n    return actions.oada.connect({\n//      token,\n      domain: domain,\n      options: config.OPTIONS,\n      cache: false,\n      concurrency: 1,\n    }).then((response) => {\n      if (!response.error) {\n        myState.currentConnection = response.connectionId;\n        myState.token = response.token;\n        myState.connected = true;\n        //Unselect local opeation\n      }\n      return response;\n    })\n  },\n  async logout({actions, state}) {\n    const myState = state.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    delete myState.token;\n    await actions.oada.disconnect({connection_id})\n  },\n  async getUserInfo({actions, state}) {\n    const myState = state.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    let requests = [{\n      path: '/users/me',\n    }];\n    await actions.oada.get({requests, connection_id})\n  },\n  async fetchAndWatch({actions, state}) {\n    const myState = state.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //Fetch field and seasons\n    let watchRequests = [\n      {\n        path: '/bookmarks/fields',\n        tree,\n        watch: {\n          actions: [actions.OADAManager.onFieldChanged]\n        }\n      },\n      {\n        path: '/bookmarks/seasons',\n        tree,\n        watch: {\n          actions: []\n        },\n      }\n    ];\n    const ret = await actions.oada.get({requests: watchRequests, connection_id})\n    let rewatchRequests = [];\n    if (ret.responses[0].error) {\n      //On 404 create and rewatch\n      if (ret.responses[0].status !== 404) throw ret.responses[0].error;\n      //Create fields and try to watch again\n      let requests = [{\n        tree,\n        data: {\n          fields: {},\n          farms: {}\n        },\n        path: '/bookmarks/fields'\n      }];\n      //Create\n      await actions.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[0]);\n    }\n    if (ret.responses[1].error) {\n      //On 404 create and rewatch\n      if (ret.responses[1].status !== 404) throw ret.responses[0].error;\n      //Create seasons and try to watch again\n      let requests = [{\n        tree,\n        data: {},\n        path: '/bookmarks/seasons'\n      }];\n      //Create\n      await actions.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[1]);\n    }\n    if (rewatchRequests.length > 0) await actions.oada.get({requests: rewatchRequests, connection_id})\n  },\n  async login({actions, state}, {domain, token}) {\n    const myState = state.OADAManager;\n    const myActions = actions.OADAManager;\n    myState.domain = domain;\n    const {error} = await myActions.connect({domain, token});\n    if (!error) {\n      await myActions.getUserInfo();\n      await actions.soils.initialize();\n      await actions.view.Map.zoomBounds();\n    }\n  },\n}\n","import { createHook } from \"overmind-react\";\nimport { namespaced } from 'overmind/config';\nimport { state } from \"./state\";\nimport * as actions from \"./actions\";\n//import { onInitialize } from \"./onInitialize\";\nimport { IConfig } from \"overmind\";\nimport oadaCacheOvermind from \"@oada/oada-cache-overmind\";\nimport * as view from './view'\nimport * as pork from './pork'\nimport * as app from './app'\nimport * as OADAManager from './OADAManager'\n\nconst oada = oadaCacheOvermind(\"oada\");\n\n/*\nexport const config = {\n  state,\n  actions: { oada: oada.actions, ...actions },\n  effects: { oada: oada.effects },\n  onInitialize,\n};\n*/\nexport const config = namespaced({\n  app,\n  oada,\n  view,\n  pork,\n  OADAManager,\n})\n\ndeclare module \"overmind\" {\n  interface Config extends IConfig<typeof config> {}\n}\n\nexport const useOvermind = createHook<typeof config>();\n","import { jsx, css } from '@emotion/react'\nimport {useOvermind} from '../../overmind'\nimport { Input, Button, Form } from 'semantic-ui-react'\n\nfunction Login() {\n  const { state, actions } = useOvermind();\n  const myState = state.view.Login;\n  const myActions = actions.view.Login;\n\n  return (\n    <div css={css`\n      height: 100vh;\n      width: 100vw;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      background: url(imgs/login-background.jpg) no-repeat center center fixed;\n      background-size: cover;\n    `}>\n      <div css={css`\n        width: 400px;\n        display: flex;\n        flex-direction: column;\n        background: #fff;\n        padding: 15px;\n        padding-top: 7px;\n        border-radius: 5px;\n      `}>\n        <img css={{\n          height: 300\n        }} src={`imgs/logo2.svg`} alt={'logo'} />\n        <Form css={css`\n          display: flex;\n          flex-direction: column;\n        `} onSubmit={myActions.login}>\n          <Input placeholder='OADA Domain...' value={myState.domain} onChange={(evt, data) => myActions.domainChange(data)} />\n          <Button\n            style={{marginTop: 7}} primary\n            loading={myState.loading}\n            disabled={myState.loading}>\n            Connect to Your OADA Cloud\n          </Button>\n          <Button\n            style={{marginTop: 7}}\n            onClick={myActions.viewDemo}\n            disabled={myState.loading}>\n            View Demo\n          </Button>\n        </Form>\n      </div>\n      <a css={css`\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        font-size: 1.2em;\n        color: #FFFFFF;\n        cursor: pointer;\n      `} onClick={myActions.logout}\n      >Logout</a>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useCallback, useState } from \"react\";\nimport { useOvermind } from \"../overmind\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\n//import Typography from \"@material-ui/core/Typography\";\nimport Login from './Login'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n  })\n);\n\nconst App = () => {\n  const { state, actions } = useOvermind();\n  const classes = useStyles();\n\n  if (!state.view.Login.loggedIn) {\n    return <Login />\n  }\n\n  return (\n    <div className={classes.root}>\n      Hello!\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { config } from \"./overmind\";\nimport \"./index.css\";\nimport App from \"./view/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport const overmind = createOvermind(config, {\n  devtools: process.env.NODE_ENV !== \"production\",\n});\n\nReactDOM.render(\n  <Provider value={overmind}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}